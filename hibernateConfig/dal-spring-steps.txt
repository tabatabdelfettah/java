1. Adding dependencies to pom.xml
	1.1. mysql-connector-java
	1.2. hibernate-core
	1.3. commons-dbcp
	1.4. spring-orm
	1.5. spring-context
	1.6. spring-beans
	1.7. spring-aspects
	
2. Adding Database Entities to the corresponding package

3. Create dal-spring-context.xml file in the following path src/main/resources

4. Adding Beans
	4.1. dataSource Bean (com.apache.commons.dbcp.BasicDataSource)
	4.2. sessionFactory Bean (org.springframework.orm.hibernate5.LocalSessionFactoryBean)
		 a) ref to dataSource
		 b) annotatedClasses or mappingResources
		 c) hibernateProperties (hibernate.dialect=org.hibernate.dialect.MySQLDialect)
	4.3. exceptionTranslationPostProcessBean (org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor)
	4.4. transactionManagerBean (org.springframework.orm.hibernate5.HibernateTransactionManager)
	
5. Adding Config
	5.1. To enable @Annotation : <context:annotation-config/>
    5.2. To scan components : 	<context:component-scan base-package="net.seniorsteps.dal"/>
	5.3. To enable aop proxy : 
			<aop:config proxy-target-class="true" />
			<aop:aspectj-autoproxy />
	5.4. To enable transactions : <tx:annotation-driven/>
	5.5. To import database properties file : <context:property-placeholder location="jdbc.properties"/>

6. Adding Database Repo Classes. Do not forget @Repository annotation above the repo classes. Apply the following pattern .. XRepo interface & XRepoImpl class

7. For Testing, Add main class. Then initialize ApplicationContext to test repos. Add BusinessTestClass rpresents the BLL. Add @Transaction over the methods of it.

